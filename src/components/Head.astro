---
import GlobalStyle from "@components/GlobalStyle.astro";
interface Props {
  title: string;
  description: string;
  image?: string | undefined;
}

const canonicalURL = new URL(
  Astro.url.pathname.endsWith("/")
    ? Astro.url.pathname
    : Astro.url.pathname + "/",
  Astro.site
);

const { title, description, image } = Astro.props;
---

<!-- Primary Meta Tags -->
<meta charset="utf-8" />
<meta
  name="viewport"
  content="width=device-width,initial-scale=1"
/>
<link
  rel="icon"
  type="image/svg+xml"
  href="/favicon.svg"
/>
<link
  rel="icon"
  type="image/png"
  href="/favicon.png"
/>
<!-- Disable requests to /favicon.ico -->
<link
  rel="icon"
  type="image/x-icon"
  href="data:,"
/>
<link
  rel="canonical"
  href={canonicalURL}
/>
<title>{title}</title>
<meta
  name="title"
  content={title}
/>
<meta
  name="description"
  content={description}
/>

<!-- Open Graph / Facebook -->
<meta
  property="og:type"
  content="website"
/>
<meta
  property="og:url"
  content={Astro.url}
/>
<meta
  property="og:title"
  content={title}
/>
<meta
  property="og:description"
  content={description}
/>
{
  image && (
    <meta
      property="og:image"
      content={new URL(image, Astro.url)}
    />
  )
}

<!-- Twitter -->
<meta
  property="twitter:card"
  content="summary_large_image"
/>
<meta
  property="twitter:url"
  content={Astro.url}
/>
<meta
  property="twitter:title"
  content={title}
/>
<meta
  property="twitter:description"
  content={description}
/>
{
  image && (
    <meta
      property="twitter:image"
      content={new URL(image, Astro.url)}
    />
  )
}

<!-- Sitemap -->
<link
  rel="sitemap"
  href="/sitemap-index.xml"
/>

<!-- RSS -->
<link
  rel="alternate"
  type="application/rss+xml"
  title="RSS Feed for alexi.sh"
  href="/feed.xml"
/>

<GlobalStyle />

<!-- Dark mode detection -->
<script is:inline>
  const theme = (() => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    return "light";
  })();

  if (theme === "light") {
    document.documentElement.classList.remove("dark");
  } else {
    document.documentElement.classList.add("dark");
  }

  window.localStorage.setItem("theme", theme);
</script>
