---
import { getCollection, type CollectionEntry } from "astro:content";
import Tag from "@components/Tag.astro";
import FormattedDate from "@components/FormattedDate.astro";
import { Image } from "astro:assets";
import BaseLayout from "@layouts/BaseLayout.astro";
import ArrowRight from "@icons/ArrowRight.astro";
import ArrowLeft from "@icons/ArrowLeft.astro";

type Props = CollectionEntry<"blog">["data"];

const posts = (await getCollection("blog")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

const postIndex = posts.findIndex((post) => post.slug === Astro.params.slug);

const [previousPost, nextPost] = [
  postIndex > 0 ? posts[postIndex - 1] : null,
  postIndex < posts.length - 1 ? posts[postIndex + 1] : null,
];
const { title, description, pubDate, updatedDate, heroImage, tags } =
  Astro.props;
---

<BaseLayout
  title={title}
  description={description}
  image={heroImage?.src}
  breadcrumbs={[{ path: "/blog", name: "Blog" }]}>
  <article>
    <div>
      {
        heroImage && (
          <Image
            width={1020}
            height={510}
            src={heroImage}
            class="mb-5 rounded-lg"
            alt=""
          />
        )
      }
    </div>
    <div class="mb-5">
      {tags.map((tag) => <Tag tag={tag} />)}
    </div>
    <div class="mb-10 max-w-none prose dark:prose-invert">
      <div>
        <h1
          class="mb-0"
          transition:name={title}>
          {title}
        </h1>
        <div>
          <FormattedDate date={pubDate} />
          {
            updatedDate && (
              <div>
                Last updated on <FormattedDate date={updatedDate} />
              </div>
            )
          }
        </div>
      </div>
      <slot />
    </div>
  </article>
  <div
    class="mb-5 mt-5 w-full flex flex-col items-center gap-10 md:flex-row md:justify-between md:gap-2">
    {
      previousPost ? (
        <a
          href={"/blog/" + previousPost.slug}
          data-sveltekit-reload
          class="flex items-center self-start text-sm text-zinc-500 dark:text-zinc-400 hover:text-zinc-900 dark:hover:text-zinc-100">
          <ArrowLeft />
          <span class="ml-2">{previousPost.data.title}</span>
        </a>
      ) : (
        <div />
      )
    }
    {
      nextPost ? (
        <a
          href={"/blog/" + nextPost.slug}
          data-sveltekit-reload
          class="flex items-center self-end text-sm text-zinc-500 dark:text-zinc-400 hover:text-zinc-900 dark:hover:text-zinc-100">
          <span class="mr-2">{nextPost.data.title}</span>
          <ArrowRight />
        </a>
      ) : (
        <div />
      )
    }
  </div>
</BaseLayout>
